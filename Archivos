#include <stdio.h>
#include <stdlib.h>
#include "pila.h"

///**/////////////////////////////////////////////////////////////
///PROTOTIPADO////////////////////////////////////////////////////
///**/////////////////////////////////////////////////////////////

///1///////////////////////////////////////////////////
void AgregarFinal(char archivoInt[]);
///2///////////////////////////////////////////////////
void mostrarInt(char archivoInt[]);
///3//////////////////////////////////////////////////
int cantRegistros (char archivoInt[]);
///4///////////////////////////////////////////////////
typedef struct
{
    int legajo;
    char nombreYapellido [30];
    int edad;
    int anio;
} stAlumno;
void AgregarAlumnoArchivo(char archivoAlumno[]);
///5///////////////////////////////////////////////////
void MostrarAlumnoArchivo(char archivoAlumno[]);
///6//////////////////////////////////////////////////
void AgregarAlumnoFinal(char archivoAlumno[]);
///7//////////////////////////////////////////////////
void PasarMayores(char archivoAlumno[], Pila* Mayores);
///8//////////////////////////////////////////////////
int ContarMayores(char archivoAlumno[]);
///9//////////////////////////////////////////////////
void MostrarMayores(char archivoAlumno[]);
///10/////////////////////////////////////////////////
void MostrarUnicoMayor(char archivoAlumno[]);
///11/////////////////////////////////////////////////
int FiltrarAnio(char archivoAlumno[], int buscar);
///12/////////////////////////////////////////////////
int CargarAlumnoStruct(stAlumno A[], int dimension);





///**/////////////////////////////////////////////////////////////
///MAIN///////////////////////////////////////////////////////////
///**/////////////////////////////////////////////////////////////
int main()
{
    char archivo[] = "archivo";
    char archivoAlum[] ="archivoAlumno";
    char continuar='s';

    stAlumno ArrAlumno[30];

    int resul=0, opcion=0, validos=0, buscar=0;

    Pila Mayores;
    inicpila(&Mayores);

    do
    {

        printf("\n\n---MENU---\n\n");
        printf("\n1.2.3.Cargar elementos en un archivo, mostrar y contar cuantos elementos hay.\n4.Cargar archivo de alumnos.\n5.Mostar archivo de alumnos.\n");
        printf("6.Agregar alumno al archivo.\n7.Pasar a una Pila los legajos de los alumnos mayores.\n8.Contar cuantos alumnos mayores se encuentran.\n");
        printf("9.Mostrar alumnos entre 15 y 18 anios.\n10.Mostrar el alumno mas grande.\n11.Cantidad de alumnos que cursan determinado año.\n");
        printf("Ingrese la opcion que desea realizar: \n");
        scanf("%d", &opcion);

        switch(opcion)
        {
        case 1:///1//////////////////////////////////////////////////////////////////////////
            AgregarFinal(archivo);
            mostrarInt(archivo);///2///////////////////////////////////////////////////////

            resul = cantRegistros (archivo);///3//////////////////////////////////////////
            printf("\nEn el archivo se encuentran: %d elementos guardados.\n", resul);
            break;
        case 4:///4//////////////////////////////////////////////////////////////////////////
            AgregarAlumnoArchivo(archivoAlum);
            break;
        case 5:///5//////////////////////////////////////////////////////////////////////////
            MostrarAlumnoArchivo(archivoAlum);
            break;
        case 6:///6////////////////////////////////////////////////////////////////////////
            AgregarAlumnoFinal(archivoAlum);
            break;
        case 7:///7//////////////////////////////////////////////////////////////////////////
            PasarMayores(archivoAlum, &Mayores);
            printf("\nLos legajos de los alumnos mayores son...\n");
            mostrar(&Mayores);
            break;
        case 8:///8///////////////////////////////////////////////////////////////////////////
            resul = ContarMayores(archivoAlum);
            printf("\nLos alumnos mayores que se encuentran en el archivo son: %d\n", resul);
            break;
        case 9:///9///////////////////////////////////////////////////////////////////////////
            MostrarMayores(archivoAlum);
            break;
        case 10:///10/////////////////////////////////////////////////////////////////////////
            printf("\nEl alumno mayor es...\n");
            MostrarUnicoMayor(archivoAlum);
            break;
        case 11:///11/////////////////////////////////////////////////////////////////////////
            printf("\nIngrese el año que desea buscar: \n");
            scanf("%d", &buscar);
            resul=FiltrarAnio(archivoAlum, buscar);
            printf("\nEn el anio %d se encuentran %d alumnos\n", buscar, resul);
            break;
        case 12:
            validos=CargarAlumnoStruct(ArrAlumno, 30);
            printf("\nSe cargaron %d alumnos", validos);

            break;
        default:
            printf("\nERROR: Porfavor ingrese una opcion valida.\n");
            break;
        }
    }
    while(continuar=='s');

    return 0;
}
///**//////////////////////////////////////////////////////////////////
///FUNCIONES///////////////////////////////////////////////////////////
///**//////////////////////////////////////////////////////////////////

///1///////////////////////////////////////////////////////////////////
void AgregarFinal(char archivoInt[])
{
    FILE *fp = fopen (archivoInt, "ab");

    char control='s';
    int num;
    if (fp)
    {
        while(control=='s')
        {
            printf("Por favor ingrese un elemento: \n");
            scanf("%d", &num);
            fwrite(&num, sizeof(int), 1, fp);

            printf("\nDesea seguir agregando elementos? (s/n)\n");
            fflush(stdin);
            scanf("%c", &control);
        }
        fclose (fp);
    }
    else
    {
        printf("\nNo pudo abrirse el archivo.\n");
    }
}

void mostrarInt(char archivoInt[])///2/////////////////////////////////////
{
    int aux;
    FILE *fp =fopen(archivoInt, "rb");
    if(fp)
    {
        printf("\nEl contenido del archivo es:\n");
        while(fread(&aux, sizeof(int), 1, fp) !=0)
        {
            printf("Valor: %d \n",aux);
        }
        printf("\n");
        fclose(fp);
    }
    else
    {
        printf("\nNo se pudo abrir.\n");
    }
}

int cantRegistros (char archivoInt[])///3///////////////////////////////////
{
    int contador=0, aux=0;

    FILE *fp = fopen (archivoInt, "rb");

    if (fp)
    {
        while(fread(&aux, sizeof(int), 1, fp) !=0)
        {
            contador++;
        }
        fclose(fp);
    }
    else
    {
        printf("\nNo se pudo abrir.\n");
    }
    return contador;
}

///4////////////////////////////////////////////////////////////////////
stAlumno CargarAlumno()
{
    stAlumno A;

    printf("\nIngrese el legajo del alumno: \n");
    scanf("%d", &A.legajo);

    printf("\Ingrese Nombre y Apellido del alumno: \n");
    fflush(stdin);
    gets(A.nombreYapellido);

    printf("Ingrese la edad del alumno: \n");
    scanf("%d", &A.edad);

    printf("Ingrese el anio del alumno: \n");
    scanf("%d", &A.anio);

    return A;
}

void AgregarAlumnoArchivo(char archivoAlumno[])
{
    char continuar='s';

    FILE *archivo = fopen(archivoAlumno, "ab");
    stAlumno aux;
    if(archivo)
    {
        while(continuar=='s')
        {
            aux = CargarAlumno();
            fwrite(&aux, sizeof(stAlumno), 1, archivo);

            printf("\nDesea seguir cargando alumnos? (s|n)\n");
            fflush(stdin);
            scanf("%c", &continuar);
        }
        fclose(archivo);
    }
    else
    {
        printf("\nNo pudo abrirse el archivo,\n");
    }
}
///5///////////////////////////////////////////////////////////////////////////////
void MostrarAlumno(stAlumno A)
{
    printf("El legajo del alumno es: %d.\n", A.legajo);
    printf("El Nombre y Apellido del alumno es: %s.\n", A.nombreYapellido);
    printf("La edad del alumno es: %d.\n", A.edad);
    printf("El año del alumno es: %d.\n", A.anio);
    printf("--------------------------------------------------\n");
}

void MostrarAlumnoArchivo(char archivoAlumno[])
{
    FILE *archivo = fopen(archivoAlumno, "rb");
    stAlumno aux;
    int i=0;

    if(archivo)
    {
        printf("\nEl contenido del archivo es... \n\n");
        while(fread(&aux, sizeof(stAlumno), 1, archivo) !=0)
        {
            MostrarAlumno(aux);
        }
        fclose(archivo);
    }
    else
    {
        printf("\nEl archivo no pudo abrirse.\n");
    }
}

///6//////////////////////////////////////////////////////////////////////////////
void AgregarAlumnoFinal(char archivoAlumno[])
{
    FILE *archivo= fopen(archivoAlumno, "ab");
    stAlumno aux;

    if(archivo)
    {
        printf("\nPorfavor ingrese el alumno a agregar al archivo...\n");
        aux = CargarAlumno(aux);
        fwrite(&aux, sizeof(stAlumno), 1, archivo);

        fclose(archivo);
    }
    else
    {
        printf("\nNo pudo abrirse el archivo.\n");
    }
}

///7/////////////////////////////////////////////////////////////////////////////
void PasarMayores(char archivoAlumno[], Pila* Mayores)
{
    FILE *archivo= fopen(archivoAlumno, "rb");
    stAlumno aux;

    if(archivo)
    {
        while(fread(&aux, sizeof(stAlumno), 1, archivo) !=0)
        {
            if(aux.edad >= 18)
            {
                apilar(Mayores, aux.legajo);
            }
        }
        fclose(archivo);
    }
    else
    {
        printf("\nEl archivo no pudo abrirse.\n");
    }
}

///8/////////////////////////////////////////////////////////////////////////////
int ContarMayores(char archivoAlumno[])
{
    FILE *archivo= fopen(archivoAlumno, "rb");
    stAlumno aux;

    int contador=0;

    if(archivo)
    {
        while(fread(&aux, sizeof(stAlumno), 1, archivo) !=0)
        {
            if(aux.edad >= 18)
            {
                contador++;
            }
        }
        fclose(archivo);
    }
    else
    {
        printf("\nEl archivo no pudo abrirse.\n");
    }
    return contador;
}

///9/////////////////////////////////////////////////////////////////////////////
void SubMostrarMayores(stAlumno A)
{
    if(A.edad >= 15 && A.edad <= 18)
    {
        printf("El legajo del alumno es: %d.\n", A.legajo);
        printf("El Nombre y Apellido del alumno es: %s.\n", A.nombreYapellido);
        printf("La edad del alumno es: %d.\n", A.edad);
        printf("El año del alumno es: %d.\n", A.anio);
        printf("--------------------------------------------------\n");
    }
}

void MostrarMayores(char archivoAlumno[])
{
    FILE *archivo= fopen(archivoAlumno, "rb");
    stAlumno aux;

    if(archivo)
    {
        while (fread(&aux, sizeof(stAlumno), 1, archivo) !=0)
        {
            SubMostrarMayores(aux);
        }
        fclose(archivo);
    }else
    {
        printf("\nEl archivo no pudo abrirse.\n");
    }
}

///10///////////////////////////////////////////////////////////////////////////
void MostrarUnicoMayor(char archivoAlumno[])
{
    FILE* archivo=fopen(archivoAlumno, "rb");
    stAlumno aux, mayor;

    if(archivo)
    {
        while(fread(&aux, sizeof(stAlumno),1, archivo) !=0)
        {
            if(aux.edad < mayor.edad)
            {
                aux=mayor;
            }
        }
        MostrarAlumno(aux);
        fclose(archivo);
    }
    else
    {
       printf("\nNo pudo abrirse el archivo.\n");
    }
}

///11//////////////////////////////////////////////////////////////////////////
int FiltrarAnio(char archivoAlumno[], int buscar)
{
    FILE *archivo=fopen(archivoAlumno, "rb");
    stAlumno aux;
    int contador=0;

    if(archivo)
    {
        while(fread(&aux, sizeof(stAlumno), 1, archivo) !=0)
        {
            if(aux.anio == buscar)
            {
                contador++;
            }
        }
        fclose(archivo);
    }
    else
    {
        printf("\nEl archivo no pudo abrirse.\n");
    }
    return contador;
}

///12//////////////////////////////////////////////////////////////////////////
int CargarAlumnoStruct(stAlumno A[], int dimension)
{
    int validos=0;
    char control='s';

    while(validos<dimension && control=='s')
    {
        printf("\nIngrese el legajo del alumno: \n");
        scanf("%d", &A[validos].legajo);

        printf("\nIngrese nombre y apellido del alumno: \n");
        fflush(stdin);
        gets(A[validos].nombreYapellido);

        printf("\nIngrese la edad del alumno: \n");
        scanf("%d", &A[validos].legajo);

        printf("\nIngrese anio del alumno: \n");
        scanf("%d", &A[validos].anio);

        validos++;

        printf("\nDesea seguir agregando alumnos? (s|n)");
        fflush(stdin);
        scanf("%c", &control);
    
    return validos;
}

void PasarAlumnoArchivo(char archivoAlumno[], stAlumno A[], int validos)
{
    FILE *archivo=fopen(archivoAlumno, "ab");
    
    if(archivo)
    {
        A=fwrite(A, sizeof(stAlumno), validos, archivo);
        fclose(archivo);
    }
    else
    {
        printf("\nNo pudo abrirse el archivo.\n");
    }
}

 





