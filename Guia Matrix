#include <stdio.h>
#include <stdlib.h>
#include <time.h>

///**PROTOTIPADO///////////////////////////////////////////////////////////////////////
void CargarMatriz(int dimF, int dimC, int M[dimF][dimC]);///**1ER EJERCICIO///////////
void MostarMatriz(int dimF, int dimC, int M[dimF][dimC]);///**2DO EJERCICIO////////////
//int CargarAleatorio (int dimF, int dimC, int M[dimF][dimC]);///**3ER EJERCICIO/////////
//int SumarMatriz(int dimF, int dimC, int M[dimF][dimC]);///**4TO EJERCICIO///////////////
float SacarPromedio(int dimF, int dimC, int M[dimF][dimC]);///5TO EJERCICIO////////////
int EncontrarDato (int dimF, int dimC, int Buscar, int M[dimF][dimC]);///6TO EJERCICIO//////

///**MAIN//////////////////////////////////////////////////////////////////////////
int main()
{
    ///Declaracion
    int dimF, dimC, resul, Buscar, flag;

    ///**Siempre preguntar esto, antes de declarar la matriz
    printf("Ingrese la dimension de las filas\n");
    scanf("%d", &dimF);
    printf("Ingrese la dimension de las columnas\n");
    scanf("%d", &dimC);

    int M2 [dimF][dimC];//variable

    ///**1ER EJERCICIO//////////////////////////////////////
    CargarMatriz(dimF, dimC, M2);

    ///**2DO EJERCICIO/////////////////////////////////////
    MostarMatriz(dimF, dimC, M2);

    /*///**4TO EJERCICIO//////////////////////////////////////
    int Resul = SumarMatriz(dimF, dimC, M2);
    printf("\n\nLa suma de la matriz es: %d\n", Resul);*/

    /*
    ///**3ER EJERCICIO///////////////////////////////////
    srand(time(NULL));
    CargarAleatorio(dimF, dimC, M2);
    MostarMatriz(dimF, dimC, M2);*/

    ///**5TO EJERCICIO/////////////////////////////////////
    float promedio = SacarPromedio(dimF, dimC, M2);
    printf("\nEl promedio de la matriz es: %.2f\n", promedio);

    ///**6TO EJERCICIO//////////////////////////////////////
    printf("\nIngrese el numero que desea buscar en la matriz; \n");
    scanf("%d", &Buscar);

    flag = EncontrarDato (dimF, dimC, Buscar, M2);

    if(flag==1){
        printf("\nEl dato a sido encontrado\n");
    }else{
        printf("\nEl dato no a sido encontrado\n");
    }


    return 0;
}

///**FUNCIONES///////////////////////////////////////////////////////////////////////

///**1ER EJERCICIO////////////////////////////////////////////////////////////////////
void CargarMatriz(int dimF, int dimC, int M[dimF][dimC])
{
    int f = 0;
    int c = 0;

    for (f=0; f<dimF; f++){
        for(c=0; c<dimC; c++){
            printf("\nIngrese un numero hasta que la matriz este llena\n");
            scanf("%d", &M[f][c]);
        }
    }
}

///**2DO EJERCICIO/////////////////////////////////////////////////////////////////////
void MostarMatriz(int dimF, int dimC, int M[dimF][dimC])
{
    int f = 0;
    int c = 0;

    for (f=0; f<dimF; f++){
        for(c=0; c<dimC; c++){
            printf("|%d|", M[f][c]);
        }
        printf("\n");
    }
}
/*
///**3ER EJERCICIO////////////////////////////////////////////////////////////
int CargarAleatorio (int dimF, int dimC, int M[dimF][dimC])
{
    int f, c, valor;

    for(f=0; f<dimF; f++){
        for(c=0; c<dimC; c++){
            M[f][c] = rand()%101;
        }
    }
    return M[dimF][dimC];
}
*/

///**4TO EJERCICIO//////////////////////////////////////////////////
/*int SumarMatriz(int dimF, int dimC, int M[dimF][dimC])
{
    int f = 0;
    int c = 0;
    int suma = 0;

    for (f=0; f<dimF; f++){
        for(c=0; c<dimC; c++){
            suma = suma + M[f][c];
        }
    }
    return suma;
}*/

///**5TO EJERCICIO//////////////////////////////////////////////////////
float SacarPromedio(int dimF, int dimC, int M[dimF][dimC])
{
    int f, c;

    int suma = 0;
    int elementos = dimF * dimC;

    for(f=0; f<dimF; f++){
        for(c=0; c<dimC; c++){
         suma += M[f][c];
        }
    }

    return (float)suma/elementos;
}

///**6TO EJERCICIO/////////////////////////////////////////////////////
int EncontrarDato (int dimF, int dimC, int Buscar, int M[dimF][dimC])
{
    int f, c;
    int flag = 0;

    for(f=0; f<dimF; f++){
        for(c=0; c<dimC; c++){
            if (Buscar == M[f][c]){
                flag=1;
            }else{
                flag=0;
            }
        }
    }
    return flag;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include <stdio.h>
#include <stdlib.h>
void cargarMatriz(int dimF, int dimC, float M[dimF][dimC]);
float MostarMatrix(int dimF, int dimC, float M[dimF][dimC]);
float CalcularDeterminante (int dimF, int dimC, float M[dimF][dimF]);


int main()
{
    float M1[2][2];
    float determinante = 0;

    int dimF = 2;
    int dimC = 2;

    cargarMatriz(2, 2, M1);
    MostarMatrix(2, 2, M1);
    determinante = CalcularDeterminante (2, 2, M1);

    printf("\nEl determinante de la matrix es: %f", determinante);

    return 0;
}

///12AVO  EJERCICIO//////////////////////////
void cargarMatriz(int dimF, int dimC, float M[dimF][dimC])
{
    int f=0; // indice para recorrer las filas
    int c=0; // indice para recorrer las columnas

    for(f=0; f<dimF; f++)
    {
        for(c=0; c<dimC; c++)
        {
            printf("\nIngrese un dato de tipo entero\n");
            scanf("%f", &M[f][c]);
        }
    }
}

float MostarMatrix (int dimF, int dimC, float M[dimF][dimC])
{
    int f;
    int c;

    for(f=0; f<dimF; f++)
    {
        for(c=0; c<dimC; c++)
        {
            printf("| %f |", M[f][c]);
        }
        printf("\n"); // para que pase a la prÃ³xima fila
    }
}
// a * b - b - c

float CalcularDeterminante (int dimF, int dimC, float M[dimF][dimF])
{
    int f;
    int c;
    float determinante = 0;
    float suma = 0;

    for(f=0; f<dimF; f++){
        for(c=0; c<dimC; c++){
            determinante = M[0][0] * M[1][1] - M[0][1] * M[1][0];
        }
    }
    return determinante;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
