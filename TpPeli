#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>

///PROTOTIPADO///////////////////////////////////////

///ESTRUC PELICULAS//////////////////////////////////
typedef struct
{
    int idPelicula;
    char nombre[50];
    int anio;
    char genero[10];
    char actores[3][50];
    int calificacion;
    int estado;
} stPelicula;
///VerificarSiLaPeliculaExiste///////////////////////
bool VerificarPelicula(char nombre[], char pelis[]);

///AgregarPeliculas//////////////////////////////////
stPelicula AgregarUnaPeli(char pelis[], int *maxId);
void CargarPeliculas(char pelis[], int maxId);

///MostrarPelis//////////////////////////////////////
void MostrarMuchasPeliculas(char pelis[]);

///AgregarUnaId//////////////////////////////////////
void AgregarId(char pelis[], int *maxId);

///BuscarYeliminarUnaPelicula////////////////////////
void BuscarYeliminarPelicula(char pelis[], char eliminarPeli[], int idBuscar);

///MostrarPeliculasBajadas/////////////////////////////
void MostrarPeliculasBajadas(char eliminarPeli[]);

///BorrarTodasLasPeliculas/////////////////////////////
void BorrarTodasPelisYnoGuardar(char pelis[]);



///MAIN//////////////////////////////////////////////
int main()
{
    char nuevaPeli[]="Peliculas";///Archivo en el que guardan las peliculas///////////////
    char bajaPeli[]="PeliculasEliminadas";///Archivo en el que guardan las peliculas que fueron eliminadas/////////////

    ///MENU//////////////////////////////////////////
    int opcion=0, maxId=0, idBuscar=0;
    char control='s';
    ///**////////////////////////////////////////////


    do
    {
        printf("\n--------MENU PELICULAS--------\n");
        printf("1.Cargar peliculas.\n2.Mostrar la peliculas cargadas.\n3.Cargar solo UNA pelicula.\n4.Buscar y dar de baja una pelicula.\n5.Mostrar peliculas que fueron dada de baja.\n");
        printf("6.Eliminar TODAS las peliculas registradas.\n");
        printf("Ingrese la opcion a realizar: \n");
        scanf("%d", &opcion);

        switch(opcion)
        {
        case 1:///AgregarPeliculas//////////////////
            CargarPeliculas(nuevaPeli, &maxId);
            break;
        case 2:///MostrasPelis/////////////
            MostrarMuchasPeliculas(nuevaPeli);
            break;
        case 3:///CargarSoloUnaPelicula////////////
            CargarUnaPeli(nuevaPeli, &maxId);
            break;
        case 4:
            printf("\nIngrese la ID que desea buscar en el archivo: \n");
            scanf("%d",&idBuscar);

            BuscarYeliminarPelicula(nuevaPeli, bajaPeli, idBuscar);
            break;
        case 5:
            MostrarPeliculasBajadas(bajaPeli);
            break;
        case 6:
            printf("\n\n------!!ATENCION!!------\n\n");
            printf("Esta opcion BORRARA y NO GUARDARA las peliculas elimindas, desea continuar? (s|n)\n\n");
            fflush(stdin);
            scanf("%c", &control);

            if(control=='s')
            {
               BorrarTodasPelisYnoGuardar(nuevaPeli);
            }else
            {
                printf("\nNo se realizara la opcion seleccionada.\nRetrocediendo...\n");
                break;
            }
            break;
        default:
            printf("\nERROR: INGRESE UNA OPCION VALIDAD.\n");
            break;
        }

        printf("\nDesea realizar otra operacion? (s|n)\n");
        fflush(stdin);
        scanf("%c", &control);
    }
    while(control=='s');

    return 0;
}
///*/////////////////////////////////////////////////////////////////////////////////////////
///FUNCIONES PARA LA CARGA DE ARCHIVOS///////////////////////////////////////////////////////
///*/////////////////////////////////////////////////////////////////////////////////////////

///*******FUNCION PARA LA ID******//////////////////////////////////////////////////////

///AgregarId/////////////////////////////////////////////////
void AgregarId(char pelis[], int *maxId)
{
    FILE *archivo=fopen(pelis, "rb");
    stPelicula aux;

    if(archivo)
    {
        while(fread(&aux, sizeof(stPelicula), 1, archivo) >0)
        {
            if(aux.idPelicula > (*maxId))
            {
                (*maxId)=aux.idPelicula;
            }
        }
        fclose(archivo);
        (*maxId)++;
    }
    else
    {
        printf("\nERROR: No pudo abrirse el archivo.\n");
    }
}
///**********FUNCIONES PARA AGREGAR******/////////////////////////////////////////////

///Validad si una pelicula se encuentra/////////////////////////////////////////
bool VerificarPelicula(char nombre[], char pelis[])
{
    FILE *archivo=fopen(pelis, "rb");
    stPelicula aux;

    if(archivo)
    {
        while(fread(&aux, sizeof(stPelicula), 1, archivo) >0)
        {
            if(strcmp(aux.nombre, nombre) == 0)
            {
                fclose(archivo);
                return true;//El archivo ya existe
            }
        }
        fclose(archivo);
    }else
    {
        printf("\nERROR: No pudo abrirse el archivo.\n");
    }
    return false;
}

///1*AgregarUnaPelicula////////////////////////////////////////
stPelicula AgregarUnaPeli(char pelis[], int *maxId)
{
    stPelicula nuevaPeli;
    int j=0;

    nuevaPeli.idPelicula= (*maxId);

    printf("\nIngrese el nombre de la pelicula: \n");
    fflush(stdin);
    gets(nuevaPeli.nombre);
    if(VerificarPelicula(nuevaPeli.nombre,pelis))
    {
        printf("\nERROR: La pelicula ya se encuentra cargada en el archivo.\n");
        nuevaPeli.idPelicula= -1;
        return nuevaPeli;
    }

    printf("Ingrese el anio de la pelicula: \n");
    scanf("%d", &nuevaPeli.anio);

    printf("Ingrese el genero de la pelicula: \n");
    fflush(stdin);
    gets(nuevaPeli.genero);

    for(j=0; j<3; j++)
    {
        printf("Ingrese los actores de la pelicula: \n");
        gets(nuevaPeli.actores[j]);
    }

    printf("Ingrese la calificacion de la pelicula: \n");
    scanf("%d", &nuevaPeli.calificacion);

    nuevaPeli.estado=1;///1 significa que la pelicula se encuentra.

    (*maxId)++;
    return nuevaPeli;
}

///1*CargarMuchasPeliculas/////////////////////////////////////
void CargarPeliculas(char pelis[], int maxId)
{
    stPelicula nuevaPeli;
    char control='s';

    FILE* archivo=fopen(pelis, "ab");

    if(archivo)
    {
        while(control=='s')
        {
            nuevaPeli = AgregarUnaPeli(pelis, &maxId);

            if(nuevaPeli.idPelicula !=-1){
            fwrite(&nuevaPeli, sizeof(stPelicula), 1, archivo);
            }

            printf("\nHay mas peliculas para cargar? (s|n)");
            fflush(stdin);
            scanf("%c", &control);
        }
        fclose(archivo);
    }
    else
    {
        printf("\nERROR: No pudo abrirse el archivo.\n");
    }
}

///AgregarSoloUnaPelicula//////////////////////////////////////
void CargarUnaPeli(char pelis[], int *maxId)
{
    FILE *archivo=fopen(pelis, "ab");
    stPelicula aux;

    if(archivo)
    {
        AgregarId(pelis, &maxId);
        aux=AgregarUnaPeli(pelis, &maxId);
        if(aux.idPelicula!=-1){
        fwrite(&aux, sizeof(stPelicula), 1, archivo);
        }

        fclose(archivo);
    }else
    {
        printf("\nERROR: El archivo no pudo abrirse.\n");
    }
}
///*******FUNCIONES PARA MOSTRAR****/////////////////////////////////////////////////////

///2*MostrarUnaPelicula///////////////////////////////////////
void MostrarUnaPelicula(stPelicula nuevaPeli)
{
    int actor=1;

    printf("\nID de la pelicula: %d\n", nuevaPeli.idPelicula);
    printf("\nEl nombre de la pelicula es: %s\n", nuevaPeli.nombre);
    printf("El anio de la pelicula es: %d\n", nuevaPeli.anio);
    printf("El genero de la pelicula es: %s\n", nuevaPeli.genero);
    for(int j=0; j<3; j++)
    {
        printf("El actor de la pelicula es: %s (%d|3)\n",nuevaPeli.actores[j], actor++);
    }
    printf("La calificacion de la pelicula es: %d\n", nuevaPeli.calificacion);
    printf("Estado de la peli: %d\n", nuevaPeli.estado);
    printf("----------------------------------------------------------------------\n");
}

///2*MostrarMuchasPeliculas///////////////////////////////////
void MostrarMuchasPeliculas(char pelis[])
{
    FILE *archivo=fopen(pelis,"rb");
    stPelicula aux;

    if(archivo)
    {
        while(fread(&aux, sizeof(stPelicula), 1, archivo) >0)
        {
            MostrarUnaPelicula(aux);

        }
        fclose(archivo);
    }
    else
    {
        printf("\nERROR: El archivo no pudo abrirse.\n");
    }
}

///*/////////////////////////////////////////////////////////////////////////////////////////
///FUNCIONES PARA LA BAJA DE ARCHIVOS///////////////////////////////////////////////////////
///*/////////////////////////////////////////////////////////////////////////////////////////

///**BuscarYeliminarUnaPelicula///////////////////////////////////////////////////
void BuscarYeliminarPelicula(char pelis[], char eliminarPeli[], int idBuscar)
{
    FILE *archivo=fopen(pelis, "r+b");
    FILE *archivoDos=fopen(eliminarPeli, "ab");

    bool encontrada=0;
    stPelicula aux;

    if(archivo && archivoDos)
    {
        while(fread(&aux, sizeof(stPelicula), 1, archivo) >0)
        {
            if(aux.idPelicula==idBuscar)
            {
                encontrada=true;
                aux.estado=0;
                fseek(archivo, -sizeof(stPelicula), SEEK_CUR);
                fwrite(&aux, sizeof(stPelicula), 1, archivo);
                fwrite(&aux, sizeof(stPelicula),1 , archivoDos);
                printf("\nPelicula eliminada correctamente.\n");
                break;
            }
        }
        if(!encontrada)
        {
            printf("\nNo se encontro ninguna pelicula con esa id.\n");
        }
        fclose(archivo);
        fclose(archivoDos);
    }else
    {
        printf("\nEl archivo no pudo abrise.\n");
    }
}

///MostrarElArchivoDePeliculasEliminadas/////////////////////////////////////////

void MostrarPeliculasBajadas(char eliminarPeli[])
{
    FILE *archivo=fopen(eliminarPeli,"rb");
    stPelicula aux;

    if(archivo)
    {
        while(fread(&aux, sizeof(stPelicula), 1, archivo) >0)
        {
            MostrarUnaPelicula(aux);

        }
        fclose(archivo);
    }
    else
    {
        printf("\nERROR: El archivo no pudo abrirse.\n");
    }
}

///BorrarTodasLasPeliculasCargadas//////////////////////////////////////////////
void BorrarTodasPelisYnoGuardar(char pelis[])
{
    FILE *archivo=fopen(pelis,"wb");
    if(archivo)
    {
        printf("\nSe han borrado todas las pelis.\n");
    }else
    {
        printf("\nERROR: No se han podido borrar las peliculas.\n");
    }
}






