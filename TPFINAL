#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#inclde <string.h>
///**////////////////////////////////////
///PROTOTIPADO///////////////////////////
///**////////////////////////////////////

///ESTRUCTURA////////
typedef struct
{
    char nombreYapellido[50];
    int legajo;
    char dni[16];
    char antiguedad[30];
    char sexo;
    int* cantidadDeVentas;
    float sueldo;
    int estado;
} stEmpleado;

///**CARGAR EL ARCHIVO DE EMPLEADOS////////////////////////////////
void cargarArchivoEmpleados(char emple[]);

///**MOSTRAR EL ARCHIVO DE EMPLEADOS///////////////////
void mostrarEmpleados(char emple[]);









///**////////////////////////////////////
///MAIN//////////////////////////////////
///**////////////////////////////////////

int main()
{
    system("color 3F");
    char empleados[]="ArchivoEmpleados";

    char control='s';
    int opcion=0;

    do
    {
        printf("\n-----MENU-----\n");
        printf("1.Agregar empleados al archivo.\n2.Mostrar el archivo de empleados.\n");
        printf("Ingrese la opcion que desea realizar.\n");
        scanf("%d", &opcion);

        switch(opcion)
        {
        case 1:
            cargarArchivoEmpleados(empleados);
            break;
        case 2:
            mostrarEmpleados(empleados);
            break;
        default:
            printf("\nERROR: Opcion no valida.\n");
            break;
        }
        printf("\nDesea realizar otra opcion: (s|n)\n");
        fflush(stdin);
        scanf("%c", &control);
    }
    while(control=='s');

    return 0;
}

///**////////////////////////////////////
///FUNCIONES/////////////////////////////
///**////////////////////////////////////

///VERIFICAR SI EL EMPLEADO YA FUE CARGADO POR DNI///////
bool verificarDNI(char dni[], char emple[])
{
    FILE *archivo=fopen(emple, "rb");
    stEmpleado aux;

    if(archivo)
    {
        while(fread(&aux, sizeof(stEmpleado), 1, archivo) >0)
        {
            if(strcmp(aux.dni, dni) == 0)
            {
                fclose(archivo);
                return true;//El archivo ya existe
            }
        }
        fclose(archivo);
    }
    else
    {
        printf("\nERROR: No pudo abrirse el archivo.\n");
    }
    return false;
}

///SEGUNDO VERIFICADOR POR NOMBRE////////////////
bool verificarNombre(char nombreyApellido[], char emple[])
{
    FILE *archivo=fopen(emple, "rb");
    stEmpleado aux;

    if(archivo)
    {
        while(fread(&aux, sizeof(stEmpleado), 1, archivo) >0)
        {
            if(strcmp(aux.nombreYapellido, nombreyApellido) == 0)
            {
                fclose(archivo);
                return true;//El archivo ya existe
            }
        }
        fclose(archivo);
    }
    else
    {
        printf("\nERROR: No pudo abrirse el archivo.\n");
    }
    return false;
}

///CARGAR UN SOLO EMPLEADO///////////////
stEmpleado cargarUnEmpleado(char emple[])
{
    system("color 2F");
    stEmpleado nuevoEmpleado;

    printf("Ingrese el nombre y el apellido del empleado.\n");
    fflush(stdin);
    gets(nuevoEmpleado.nombreYapellido);

    if(verificarNombre(nuevoEmpleado.nombreYapellido, emple))
    {
        printf("\nERROR: El empleado ya existe en el archivo.\n");
        nuevoEmpleado.estado=-1;
        return nuevoEmpleado;
    }

    printf("Ingrese el legajo el empleado.\n");
    scanf("%d", &nuevoEmpleado.legajo);

    printf("Ingrese el dni del empleado.\n");
    fflush(stdin);
    gets(nuevoEmpleado.dni);

    if(verificarDNI(nuevoEmpleado.dni, emple))
    {
        printf("\nERROR: El empleado ya existe en el archivo.\n");
        nuevoEmpleado.estado= -1;
        return nuevoEmpleado;
    }

    printf("Ingrese la antiguedad del empleado.(D/M/A)\n");
    fflush(stdin);
    gets(nuevoEmpleado.antiguedad);

    printf("Ingrese el sexo del empleado.(M,F,O)\n");
    fflush(stdin);
    scanf("%c", &nuevoEmpleado.sexo);

    printf("Ingrese la cantidad de ventas del empleado.\n");
    scanf("%d", &nuevoEmpleado.cantidadDeVentas);

    printf("Ingrese el sueldo del empleado.\n");
    scanf("%f", &nuevoEmpleado.sueldo);

    printf("Ingrese el estado del empleado.(1 Activo, 0 Inactivo)\n");
    scanf("%d", &nuevoEmpleado.estado);

    return nuevoEmpleado;
}

///CARGAR ARCHIVO DE EMPLEADOS//////////
void cargarArchivoEmpleados(char emple[])
{
    FILE *archivo=fopen(emple, "ab");
    stEmpleado aux;

    char control='s';

    if(archivo)
    {
        while(control=='s')
        {
            aux = cargarUnEmpleado(emple);
            if(aux.estado !=-1)
            {
                fwrite(&aux, sizeof(stEmpleado), 1, archivo);
            }

            printf("\nDesea seguir cargando nuevos empleados al archivo? (s|n)");
            fflush(stdin);
            scanf("%c", &control);
        }
        fclose(archivo);
    }
    else
    {
        printf("\nERROR: El archivo no pudo abrirse para cargar nuevos empleados.\n");
    }
}

///MOSTRAR UN SOLO EMPLEADO//////////////
void mostrarUnEmpleado(stEmpleado nuevoEmpleado)
{
    printf("\nEl nombre y Apellido del empleado: %s\n", nuevoEmpleado.nombreYapellido);
    printf("El legajo del empleado es: %d\n", nuevoEmpleado.legajo);
    printf("El dni del empleado es: %s\n", nuevoEmpleado.dni);
    printf("La antiguedad del empleado es: %s\n", nuevoEmpleado.antiguedad);
    printf("El sexo del empleado: %c\n", nuevoEmpleado.sexo);
    printf("La cantidad de ventas del empleado es: %d\n", nuevoEmpleado.cantidadDeVentas);
    printf("El sueldo del empleado es: %.2f\n", nuevoEmpleado.sueldo);
    printf("El estado del empleado es: %d\n", nuevoEmpleado.estado);
    printf("\n-----------------------------------------------------------\n");
}

///MOSTRAR ARCHIVO DE EMPLEADOS/////////
void mostrarEmpleados(char emple[])
{
    FILE *archivo= fopen(emple, "rb");
    stEmpleado aux;

    if(archivo)
    {
        while(fread(&aux, sizeof(stEmpleado), 1, archivo) >0)
        {
            mostrarUnEmpleado(aux);
        }
        fclose(archivo);
    }
    else
    {
        printf("\nERROR: El archivo no pudo abrirse.\n");
    }
}

///**//////////////////////////////////
