#include <stdio.h>
#include <stdlib.h>
///**/////////////////////////////////////////////////////////////
///**STRUCTS//////////////////////////////////////////////////
///**/////////////////////////////////////////////////////////////

///1
typedef struct
{
    int matricula;
    char nombre[30];
    char genero;
} stAlumno;

///**/////////////////////////////////////////////////////////////
///**PROTOTIPADO//////////////////////////////////////////////////
///**/////////////////////////////////////////////////////////////

///1
stAlumno CargarAlumno();
int CargarArrStruct(stAlumno A[], int dimension);
///2
void MostrarAlumno(stAlumno A);
void MostarArrStruct(stAlumno A[], int validos);
///3
int BuscarAlumno(stAlumno A[], int validos, int matricula);
///4
void OrdenarPorSeleccion(stAlumno A[], int  validos);
void MostarArrStruct(stAlumno A[], int validos);



///**/////////////////////////////////////////////////////////////
///**MAIN/////////////////////////////////////////////////////////
///**/////////////////////////////////////////////////////////////


int main()
{
    int validos=0, opcion=0, matricula=0, resul=0, flag=0;
    char continuar='s';

    stAlumno ArrAlumno[30];

    do
    {
        printf("---MENU---");
        printf("\n1.Cargar Alumnos\n2.Mostrar Alumnos\n3.Buscar Alumno\n4.Ordenar Alumnos.\n");
        printf("\nIngrese la opcion que desea realizar: \n");
        scanf("%d", &opcion);

        switch(opcion)
        {
        case 1:///1
            validos= CargarArrStruct(ArrAlumno, 30);
            printf("\nSe cargaron %d alumnos.\n", validos);
            break;
        case 2:///2
            MostarArrStruct(ArrAlumno, validos);
            break;
        case 3:///3
            printf("\nIngrese la matricula que desea buscar: \n");
            scanf("%d", &matricula);

            flag=BuscarAlumno(ArrAlumno, validos, matricula);

            if(flag==0)
            {
                printf("\nEl legajo no se ha encontrado.\n");
            }else
            {
                printf("\nEl legajo se a encontrado.\n");
            }
            break;
        case 4:
            printf("\nOrdenando alumnos.\n");
            OrdenarPorSeleccion(ArrAlumno, validos);
            MostarArrStruct(ArrAlumno, validos);
            break;

        default:
            printf("\nERROR: Ingrese una opcion valida\n");
            break;
        }
    }
    while(continuar=='s');

    return 0;
}

///**/////////////////////////////////////////////////////////////
///**FUNCIONES////////////////////////////////////////////////////
///**/////////////////////////////////////////////////////////////

///1/////////////////////////////////////////
stAlumno CargarAlumno()
{
    stAlumno A;

    printf("\nIngrese la matricula del alumno: \n");
    scanf("%d", &A.matricula);

    printf("\nIngrese el nombre del alumno: \n");
    fflush(stdin);
    gets(A.nombre);

    printf("\nIngrese el genero del alumno (m/f/o)\n");
    fflush(stdin);
    scanf("%c", &A.genero);

    return A;
}

int CargarArrStruct(stAlumno A[], int dimension)
{
    int validos=0;
    char continuar='s';

    while(validos<dimension && continuar=='s')
    {
        A[validos]=CargarAlumno();
        validos++;

        printf("\Desea seguir cargando alumnos? (s|n)");
        fflush(stdin);
        scanf("%c", &continuar);
    }
    return validos;
}

///2////////////////////////////////////////////
void MostrarAlumno(stAlumno A)
{
    printf("\nLa matricula del alumno es: %d\n", A.matricula);
    printf("\nEl nombre del alumno es: %s\n", A.nombre);
    printf("\nEl genero del alumno es: %c\n", A.genero);
}

void MostarArrStruct(stAlumno A[], int validos)
{
    int i=0;

    for(i=0; i<validos; i++)
    {
        MostrarAlumno(A[i]);
        printf("\n--------------------\n");
    }
}

///3///////////////////////////////////////////////
int BuscarAlumno(stAlumno A[], int validos, int matricula)
{
    int i=0;
    int flag=0;

    while(i<validos && flag==0)
    {
        if(A[i].matricula==matricula)
        {
            flag=1;
        }
        else
        {
            i++;
        }
    }
    return flag;
}

///4
int SubFuncion(stAlumno A[], int validos,int pos)
{
    int menor=A[pos].matricula;
    int PosMenor=pos;
    int index=pos+1;

    while(index<validos)
    {
        if(menor>A[index].matricula)
        {
            menor=A[index].matricula;
            PosMenor=index;
        }
        else
        {
            index++;
        }
    }
    return PosMenor;
}

void OrdenarPorSeleccion(stAlumno A[], int  validos)
{
    int aux;
    int Posmenor;
    int i=0;

    while(i<validos-1)
    {
        Posmenor= SubFuncion(A, validos, i);

        aux=A[Posmenor].matricula;

        A[Posmenor].matricula=A[i].matricula;

        A[i].matricula=aux;

        i++;
    }
}

///5


























































